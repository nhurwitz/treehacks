

body {
/*background-color: #414141;*/
background: -webkit-linear-gradient(90deg, #232526 10%, #414345 90%); /* Chrome 10+, Saf5.1+ */
  background:    -moz-linear-gradient(90deg, #232526 10%, #414345 90%); /* FF3.6+ */
  background:     -ms-linear-gradient(90deg, #232526 10%, #414345 90%); /* IE10 */
  background:      -o-linear-gradient(90deg, #232526 10%, #414345 90%); /* Opera 11.10+ */
  background:         linear-gradient(90deg, #232526 10%, #414345 90%); /* W3C */
}


.nada {
  .container-fluid {
   width: 100%;
   text-align: center;
   margin-top: 10%;
   color: white;
  }
}

.wrap{
  color: white;

  .dem-header {
    text-align: center;
    font-size: 72px;
    letter-spacing: 2px;
    padding-bottom: 10px;
    font-family: 'Amatic SC';

  }
  .container-fluid {
    margin-top: 12%;
    width: 30%;
  }
}

.form-wrap {
  text-align: center;
  float: left;
  padding-bottom: 45px;
}

#contained {
  padding-top: 10px;
  padding-bottom: 10px;

  .content-scrollable {
    display: inline-block;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
}

#but {
  width: 100%;
  text-align: center;
}


.welcome-header {
  font-size: 72px; 
  font-family: 'Amatic SC';
  line-height: 20px;
  padding-bottom: 30px;
  margin: 0 auto;
}


.container-fluid img {
  padding-bottom: -20px;
}

.agree-button {
  padding-top: 15px;
}

.footer {
  padding-top: 120px;
  vertical-align: 0px;
  float: right;
  padding-right: 20px;
  color: white;
  font-size: 12px;
  font-family: 'Helvetica Neue';
}

.footer  img {
  padding-top: 5px;
  height: 20px;
  width: 100px;
}

.survey-wrap {
  width: 100%;
  margin-top: 2%;
  color: white;
}

.buttonz {
  padding-top: 40px;
  text-align: center;
  width: 100%;
}

.surround {
  margin-left: 30px;
  margin-right: 30px;
}

.surround form {
  text-transform: capitalize;
}

.surroundform {
  margin-left: 35%;
}

  .headerz {
    color: white;
    text-align: center;
    font-family: 'Amatic SC';
    font-size: 72px;
    padding-bottom: 15px;
  }

  .counters {
    float: right;
    color: white;
    font-size: 32px;
    font-weight: 700;
    font-family: 'Amatic SC' ;
    margin-right : 5%;
  }  



  .tablewrap {
    text-transform: capitalize;
    width: 100%;
  }


  .explain{
    color: white;
    padding-left: 30px;
    font-size: 12px;
    font-weight: bold;
    font-family: 'Open Sans' ;
    width: 300px;
/*    padding-bottom: 10px;*/
    float: left;
  }  

  .actual-question {
    padding-bottom: 4px;
  }

  #upvote, #downvote {
    font-size: 24px;
    color: #666666 ;
  }

  #upvote:hover, #downvote:hover {
    /*color: #a1bfde;*/
     /*color: #eba3cd;*/
    color: white;
     -o-transition:.5s; -ms-transition:.5s; -moz-transition:.5s; -webkit-transition:.5s; transition:.5s;
  }

  #upvote:focus {
    color: #a1bfde;
  }

  #downvote:focus {
    color: #eba3cd;
  }



  






/*

@menu-width: 270px;
@column: 5.55555%;

body {
  .position(absolute, 0, 0, 0, 0);

  .background-image( linear-gradient(top, #FFFFFF, #FFFFFF 100%) );
  background-repeat: no-repeat;
  background-attachment: fixed;
}

#container {
  .position(absolute, 0, 0, 0, 0);

  @media screen and (min-width: 60em) {
    left: @column;
    right: @column;
  }

  @media screen and (min-width: 80em) {
    left: 2*@column;
    right: 2*@column;
  }

  // Hide anything offscreen
  overflow: hidden;
}

#menu {
  .position(absolute, 0, 0, 0, 0, @menu-width);
}

#content-container {
  .position(absolute, 0, 0, 0, 0);
  .transition(all 200ms ease-out);
  .transform(translate3d(0, 0, 0));
  background: @color-tertiary;
  opacity: 1;

  @media screen and (min-width: 40em) {
//    left: @menu-width;
  }

  .content-scrollable {
    .position(absolute, 0, 0, 0, 0);
    .transform(translate3d(0, 0, 0));
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }

  // Toggle menu on mobile
  .menu-open & {
    .transform(translate3d(@menu-width, 0, 0));
    opacity: .85;
    left: 0;

    @media screen and (min-width: 40em) {
      // Show menu on desktop, negate .menu-open
      .transform(translate3d(0, 0, 0)); //reset transform and use position properties instead
      opacity: 1;
      left: @menu-width;
    }
  }
}

// Transparent screen to prevent interactions on content when menu is open
.content-overlay {
  .position(absolute, 0, 0, 0, 0);
  cursor: pointer;

  .menu-open & {
    .transform(translate3d(@menu-width, 0, 0));
    z-index: 1;
  }

  // Hide overlay on desktop
  @media screen and (min-width: 40em) { display: none; }
}*/